{
  
    
        "post0": {
            "title": "Thompson Sampling",
            "content": "Implementation . import matplotlib.pyplot as plt import numpy as np from scipy.stats import beta . no_of_trials = 3001 bandits_true_prob = [0.1, 0.45, 0.85] # We usually do not know this value. For experimental purposes, we define the 3 bandits to have these true probabilities (win rate). . class Bandit(): def __init__(self, p): self.p = p self.a = 1 #initial value self.b = 1 #initial value self.N = 0 def pull(self): return np.random.random() &lt; self.p # returns 0 or 1 def sample(self): return np.random.beta(self.a,self.b) # returns a value within the confidence interval def update(self, x): self.a += x self.b += 1-x self.N += 1 . def plots(bandits, trials): plt.figure(figsize=(16,9)) x = np.linspace(0,1,200) for b in bandits: y = beta.pdf(x, b.a, b.b) # creates a beta distribution within 0 to 1 plt.plot(x,y, label=f&#39;True probability:{b.p}, Win rate = {b.a-1}/{b.N}&#39;) plt.title(f&#39;Distribution for each bandit after {trials} trials&#39;) plt.legend() plt.show() . def experiment(): np.random.seed(2) bandits = [Bandit(p) for p in bandits_true_prob] n_trials = [0,5,10,20,50,100,200,500,1000,2000,3000] rewards = np.zeros(no_of_trials) for i in np.arange(0,no_of_trials): j = np.argmax([b.sample() for b in bandits]) if i in n_trials: plots(bandits,i) x = bandits[j].pull() #x is 0 or 1 here # Get feedback after bandit is triggered (pulled) bandits[j].update(x) rewards[i] = x return rewards . Results . rewards = experiment() . plt.figure(figsize=(16,9)) plt.plot(np.cumsum(rewards),label=f&#39;Cumulative rewards&#39;) plt.title(f&#39;Cumulative rewards after 3000 trials&#39;) plt.legend() plt.show() .",
            "url": "http://eugenewong-ai.github.io/datascience-blog/2020/12/24/Introduction-to-Thompson-Sampling.html",
            "relUrl": "/2020/12/24/Introduction-to-Thompson-Sampling.html",
            "date": " • Dec 24, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "http://eugenewong-ai.github.io/datascience-blog/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "http://eugenewong-ai.github.io/datascience-blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}